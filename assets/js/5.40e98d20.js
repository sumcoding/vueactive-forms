(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{351:function(t,e,a){"use strict";a.r(e);var i=a(42),l=Object(i.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("h2",{attrs:{id:"form-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#form-group"}},[t._v("#")]),t._v(" Form Group")]),t._v(" "),a("h3",{attrs:{id:"invalid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invalid"}},[t._v("#")]),t._v(" "),a("code",[t._v("$invalid")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Indicates the state of validation for given form group object. Becomes "),a("code",[t._v("true")]),t._v(" when any of it's child validators returns a "),a("code",[t._v("falsy")]),t._v(" value. In case of validation groups, all grouped validators are considered.")])])])]),t._v(" "),a("h3",{attrs:{id:"dirty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dirty"}},[t._v("#")]),t._v(" "),a("code",[t._v("$dirty")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Represents if any child inputs of the form group has been touched. Can be set manually using the "),a("code",[t._v("touch()")]),t._v(" and "),a("code",[t._v("reset()")]),t._v(" functions.")])])])]),t._v(" "),a("h3",{attrs:{id:"error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[t._v("#")]),t._v(" "),a("code",[t._v("$error")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Indicates if the form is both "),a("code",[t._v("$invalid")]),t._v(" and "),a("code",[t._v("$dirty")]),t._v(". Use as a convenient combination for messaging.")])])])]),t._v(" "),a("h3",{attrs:{id:"clean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean"}},[t._v("#")]),t._v(" "),a("code",[t._v("$clean")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("function")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Use to remove all vueactive form attributes. This will give you a clean object that can be used to "),a("code",[t._v("submit")]),t._v(" the form to a database or the like.")])])])]),t._v(" "),a("h3",{attrs:{id:"reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" "),a("code",[t._v("$reset")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("function")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Use to reset the form input values back to the "),a("code",[t._v("$originalValue")]),t._v(" the form started with and reset all "),a("code",[t._v("$dirty")]),t._v("'s back to false.")])])])]),t._v(" "),a("h3",{attrs:{id:"touch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#touch"}},[t._v("#")]),t._v(" "),a("code",[t._v("$touch")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("function")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Use to set "),a("code",[t._v("$dirty")]),t._v(" on the top level form and all its children.")])])])]),t._v(" "),a("h2",{attrs:{id:"form-input"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#form-input"}},[t._v("#")]),t._v(" Form Input")]),t._v(" "),a("h3",{attrs:{id:"invalid-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#invalid-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("$invalid")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Indicates the state of validation for given input. Becomes "),a("code",[t._v("true")]),t._v(" when any of it's validators returns a "),a("code",[t._v("falsy")]),t._v(" value. In case of validation groups, all grouped validators are considered.")])])])]),t._v(" "),a("h3",{attrs:{id:"dirty-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dirty-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("$dirty")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Represents if the input has been touched.")])])])]),t._v(" "),a("h3",{attrs:{id:"error-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("$error")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Indicates if the input is both "),a("code",[t._v("$invalid")]),t._v(" and "),a("code",[t._v("$dirty")]),t._v(". Use as a convenient combination for messaging.")])])])]),t._v(" "),a("h3",{attrs:{id:"originalvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#originalvalue"}},[t._v("#")]),t._v(" "),a("code",[t._v("$originalValue")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("string")]),t._v(" "),a("code",[t._v("number")]),t._v(" "),a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Keeps a copy of the original value the input was initialized with. Used with the "),a("code",[t._v("reset")]),t._v(" function on a form group.")])])])]),t._v(" "),a("h3",{attrs:{id:"value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" "),a("code",[t._v("value")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("string")]),t._v(" "),a("code",[t._v("number")]),t._v(" "),a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Reactive value to be used with "),a("code",[t._v("v-model")]),t._v(".")])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);